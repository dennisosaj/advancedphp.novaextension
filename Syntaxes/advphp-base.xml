<?xml version="1.0" encoding="UTF-8"?>
<syntax name="advphp-base" subsyntax="true">
    <meta>
        <name>advanced PHP (Base)</name>
        <type>script</type>
    </meta>
    
    <identifiers>
        <prefixes>
            <string>$</string>
        </prefixes>
    </identifiers>
    
    <indentation>
        <increase>
            <expression>(\:[^}\"']*$)|(\{[^}\"']*$)|(\[[^\]\"']*$)|(\([^)\"']*$)</expression>
        </increase>
        <decrease>
            <expression>^\s*(\s*/\*.*\*/\s*)*[\}\]\)\\]</expression>
        </decrease>
    </indentation>
    
    <comments>
        <single>
            <expression>//</expression>
        </single>
        <multiline>
            <starts-with>
                <expression>/*</expression>
            </starts-with>
            <ends-with>
                <expression>*/</expression>
            </ends-with>
        </multiline>
    </comments>
    
    <brackets>
        <pair open="{" close="}" />
        <pair open="[" close="]" />
        <pair open="(" close=")" />
    </brackets>
    
    <surrounding-pairs>
        <pair open="{" close="}" />
        <pair open="[" close="]" />
        <pair open="(" close=")" />
        <pair open="&apos;" close="&apos;" />
        <pair open="&quot;" close="&quot;" />
        <pair open="`" close="`" />
    </surrounding-pairs>
    
    <symbols redefinition="within-construct">
        <local scope="within-construct" />
        <documentation mode="before" match-multiple="comment" />
        <documentation mode="after" match-multiple="comment" />
    </symbols>
           
    <scopes>
        <include syntax="self" collection="comments" />
        <include syntax="self" collection="statics" />
        <include syntax="self" collection="definitions" />
        <include syntax="self" collection="values" />
        <include syntax="self" collection="identifiers" />
        <include syntax="self" collection="blocks" />
        <include syntax="self" collection="syntax" />    
    </scopes>
    
    <collections>
        
        <!--
             ██████╗ ██████╗ ███╗   ███╗███╗   ███╗███████╗███╗   ██╗████████╗███████╗
            ██╔════╝██╔═══██╗████╗ ████║████╗ ████║██╔════╝████╗  ██║╚══██╔══╝██╔════╝
            ██║     ██║   ██║██╔████╔██║██╔████╔██║█████╗  ██╔██╗ ██║   ██║   ███████╗
            ██║     ██║   ██║██║╚██╔╝██║██║╚██╔╝██║██╔══╝  ██║╚██╗██║   ██║   ╚════██║
            ╚██████╗╚██████╔╝██║ ╚═╝ ██║██║ ╚═╝ ██║███████╗██║ ╚████║   ██║   ███████║
             ╚═════╝ ╚═════╝ ╚═╝     ╚═╝╚═╝     ╚═╝╚══════╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝
        -->
        <!-- Comments -->
        <collection name="comments">
            <scope name="advphp-base.comment.single">
                <expression>(?:(?:\/\/)|\#)(.*?)(?:(?=\?&gt;)|$)</expression>
                <capture number="1" name="advphp-base.comment.content" />
                <capture number="2" name="advphp-base.comment.content" />
            </scope>

            <scope name="advphp-base.comment.multi">
               <starts-with>
                    <expression>\/\*</expression>
                    <capture number="0" name="advphp-base.comment.content" />
                </starts-with>
                <ends-with>
                    <expression>\*\/</expression>
                    <capture number="0" name="advphp-base.comment.content" />
                </ends-with>
            </scope>
        </collection>
        
        <!--
            ███████╗████████╗ █████╗ ████████╗██╗ ██████╗███████╗
            ██╔════╝╚══██╔══╝██╔══██╗╚══██╔══╝██║██╔════╝██╔════╝
            ███████╗   ██║   ███████║   ██║   ██║██║     ███████╗
            ╚════██║   ██║   ██╔══██║   ██║   ██║██║     ╚════██║
            ███████║   ██║   ██║  ██║   ██║   ██║╚██████╗███████║
            ╚══════╝   ╚═╝   ╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝╚══════╝
        -->
        <!-- Statics -->
        <collection name="statics">
            <scope name="advphp-base.static.condition">
                <strings>
                    <!-- reserved conditions -->
                    <string>if</string>
                    <string>endif</string>
                    <string>elseif</string>
                    <string>else</string>
                    <string>for</string>
                    <string>endfor</string>
                    <string>foreach</string>
                    <string>endforeach</string>
                    <string>try</string>
                    <string>catch</string>
                    <string>case</string>
                    <string>switch</string>
                    <string>break</string>
                    <string>default</string>
                    <string>endswitch</string>
                    <string>do</string>
                    <string>while</string>
                    <string>endwhile</string>
                </strings>
            </scope>
            <scope name="advphp-base.static.processor">
                <strings>
                    <!-- reserved processors -->
                    <string>echo</string>
                    <string>return</string>
                    <string>clone</string>
                    <string>yield</string>
                    <string>yield from</string>
                    <string>print</string>
                </strings>
            </scope>
            <scope name="advphp-base.static.declaration">
                <strings>
                    <!-- reserved declarations -->
                    <string>new</string>
                    <string>public</string>
                    <string>private</string>
                    <string>protected</string>
                    <string>global</string>
                    <string>object</string>
                    <string>array</string>
                    <string>float</string>
                    <string>int</string>
                    <string>string</string>
                </strings>
            </scope>
            <scope name="advphp-base.static.import">
                <strings>
                    <!-- reserved imports -->
                    <string>include</string>
                    <string>include_once</string>
                    <string>require</string>
                    <string>require_once</string>
                </strings>
            </scope>
            <scope name="advphp-base.static.constant">
                <strings>
                    <!-- reserved variables -->
                    <string>__DIR__</string>
                    <string>__METHOD__</string>
                    <string>__FILE__</string>
                    <string>__LINE__</string>
                    <string>__FUNCTION__</string>
                    <string>__CLASS__</string>
                    <string>__NAMESPACE__</string>
                    <string>E_ALL</string>
                    <string>E_COMPILE_ERROR</string>
                    <string>E_COMPILE_WARNING</string>
                    <string>E_CORE_ERROR</string>
                    <string>E_CORE_WARNING</string>
                    <string>E_DEPRECATED</string>
                    <string>E_ERROR</string>
                    <string>E_NOTICE</string>
                    <string>E_PARSE</string>
                    <string>E_RECOVERABLE_ERROR</string>
                    <string>E_STRICT</string>
                    <string>E_USER_DEPRECATED</string>
                    <string>E_USER_ERROR</string>
                    <string>E_USER_NOTICE</string>
                    <string>E_USER_WARNING</string>
                    <string>E_WARNING</string>  
                </strings>
            </scope>
            <scope name="advphp-base.static.wordOperator">
                <strings>
                    <!-- reserved word operators -->
                    <string>AND</string>
                    <string>OR</string>
                    <string>XOR</string>
                    <string>AS</string>
                    <string>and</string>
                    <string>or</string>
                    <string>xor</string>
                    <string>as</string>
                </strings>
            </scope>
        </collection>
        
        <collection name="sqls">
            <scope name="advphp-base.sql.keywords">
                <!-- reserved SQL keywords -->
                <strings case-insensitive="false">
                    <string>ABSOLUTE</string>
                    <string>ACTION</string>
                    <string>ADA</string>
                    <string>ADD</string>
                    <string>ALL</string>
                    <string>ALLOCATE</string>
                    <string>ALTER</string>
                    <string>AND</string>
                    <string>ANY</string>
                    <string>ARE</string>
                    <string>AS</string>
                    <string>ASC</string>
                    <string>ASSERTION</string>
                    <string>AT</string>
                    <string>AUTHORIZATION</string>
                    <string>AVG</string>
                    <string>BEGIN</string>
                    <string>BETWEEN</string>
                    <string>BIT</string>
                    <string>BIT_LENGTH</string>
                    <string>BOTH</string>
                    <string>BTREE</string>
                    <string>BY</string>
                    <string>CASCADE</string>
                    <string>CASCADED</string>
                    <string>CASE</string>
                    <string>CAST</string>
                    <string>CATALOG</string>
                    <string>CHAR</string>
                    <string>CHARACTER</string>
                    <string>CHARACTER_LENGTH</string>
                    <string>CHAR_LENGTH</string>
                    <string>CHARSET</string>
                    <string>CHECK</string>
                    <string>CLOSE</string>
                    <string>COALESCE</string>
                    <string>COLLATE</string>
                    <string>COLLATION</string>
                    <string>COLUMN</string>
                    <string>COMMIT</string>
                    <string>CONNECT</string>
                    <string>CONNECTION</string>
                    <string>CONSTRAINT</string>
                    <string>CONSTRAINTS</string>
                    <string>CONTINUE</string>
                    <string>CONVERT</string>
                    <string>CORRESPONDING</string>
                    <string>COUNT</string>
                    <string>CREATE</string>
                    <string>CROSS</string>
                    <string>CURRENT</string>
                    <string>CURRENT_DATE</string>
                    <string>CURRENT_TIME</string>
                    <string>CURRENT_TIMESTAMP</string>
                    <string>CURRENT_USER</string>
                    <string>CURSOR</string>
                    <string>DATE</string>
                    <string>DAY</string>
                    <string>DEALLOCATE</string>
                    <string>DEC</string>
                    <string>DECIMAL</string>
                    <string>DECLARE</string>
                    <string>DEFAULT</string>
                    <string>DEFERRABLE</string>
                    <string>DEFERRED</string>
                    <string>DELETE</string>
                    <string>DESC</string>
                    <string>DESCRIBE</string>
                    <string>DESCRIPTOR</string>
                    <string>DIAGNOSTICS</string>
                    <string>DISCONNECT</string>
                    <string>DISTINCT</string>
                    <string>DOMAIN</string>
                    <string>DOUBLE</string>
                    <string>DROP</string>
                    <string>ELSE</string>
                    <string>END</string>
                    <string>END-EXEC</string>
                    <string>ENGINE</string>
                    <string>ESCAPE</string>
                    <string>EXCEPT</string>
                    <string>EXCEPTION</string>
                    <string>EXEC</string>
                    <string>EXECUTE</string>
                    <string>EXISTS</string>
                    <string>EXTERNAL</string>
                    <string>EXTRACT</string>
                    <string>FETCH</string>
                    <string>FIRST</string>
                    <string>FLOAT</string>
                    <string>FOR</string>
                    <string>FOREIGN</string>
                    <string>FORTRAN</string>
                    <string>FOUND</string>
                    <string>FROM</string>
                    <string>FULL</string>
                    <string>GET</string>
                    <string>GLOBAL</string>
                    <string>GO</string>
                    <string>GOTO</string>
                    <string>GRANT</string>
                    <string>GROUP</string>
                    <string>HAVING</string>
                    <string>HOUR</string>
                    <string>IDENTITY</string>
                    <string>IF</string>
                    <string>IMMEDIATE</string>
                    <string>IN</string>
                    <string>INCLUDE</string>
                    <string>INDEX</string>
                    <string>INDICATOR</string>
                    <string>INITIALLY</string>
                    <string>INNER</string>
                    <string>INPUT</string>
                    <string>INSENSITIVE</string>
                    <string>INSERT</string>
                    <string>INT</string>
                    <string>INTEGER</string>
                    <string>INTERSECT</string>
                    <string>INTERVAL</string>
                    <string>INTO</string>
                    <string>IS</string>
                    <string>ISOLATION</string>
                    <string>JOIN</string>
                    <string>KEY</string>
                    <string>LANGUAGE</string>
                    <string>LAST</string>
                    <string>LEADING</string>
                    <string>LEFT</string>
                    <string>LEVEL</string>
                    <string>LIKE</string>
                    <string>LOCAL</string>
                    <string>LOCK</string>
                    <string>LOWER</string>
                    <string>MATCH</string>
                    <string>MAX</string>
                    <string>MIN</string>
                    <string>MINUTE</string>
                    <string>MODULE</string>
                    <string>MONTH</string>
                    <string>NAMES</string>
                    <string>NATIONAL</string>
                    <string>NATURAL</string>
                    <string>NCHAR</string>
                    <string>NEXT</string>
                    <string>NO</string>
                    <string>NONE</string>
                    <string>NOT</string>
                    <string>NULLIF</string>
                    <string>NUMERIC</string>
                    <string>OCTET_LENGTH</string>
                    <string>OF</string>
                    <string>ON</string>
                    <string>ONLY</string>
                    <string>OPEN</string>
                    <string>OPTION</string>
                    <string>OR</string>
                    <string>ORDER</string>
                    <string>OUTER</string>
                    <string>OUTPUT</string>
                    <string>OVERLAPS</string>
                    <string>PAD</string>
                    <string>PARTIAL</string>
                    <string>PASCAL</string>
                    <string>POSITION</string>
                    <string>PRECISION</string>
                    <string>PREPARE</string>
                    <string>PRESERVE</string>
                    <string>PRIMARY</string>
                    <string>PRIOR</string>
                    <string>PRIVILEGES</string>
                    <string>PROCEDURE</string>
                    <string>PUBLIC</string>
                    <string>READ</string>
                    <string>REAL</string>
                    <string>REFERENCES</string>
                    <string>RELATIVE</string>
                    <string>RESTRICT</string>
                    <string>REVOKE</string>
                    <string>RIGHT</string>
                    <string>ROLLBACK</string>
                    <string>ROWS</string>
                    <string>SCHEMA</string>
                    <string>SCROLL</string>
                    <string>SECOND</string>
                    <string>SECTION</string>
                    <string>SELECT</string>
                    <string>SESSION</string>
                    <string>SESSION_USER</string>
                    <string>SET</string>
                    <string>SIZE</string>
                    <string>SMALLINT</string>
                    <string>SOME</string>
                    <string>SPACE</string>
                    <string>SQL</string>
                    <string>SQLCA</string>
                    <string>SQLCODE</string>
                    <string>SQLERROR</string>
                    <string>SQLSTATE</string>
                    <string>SQLWARNING</string>
                    <string>SUBSTRING</string>
                    <string>SUM</string>
                    <string>SYSTEM_USER</string>
                    <string>TABLE</string>
                    <string>TABLES</string>
                    <string>TEMPORARY</string>
                    <string>THEN</string>
                    <string>TIME</string>
                    <string>TIMESTAMP</string>
                    <string>TIMEZONE_HOUR</string>
                    <string>TIMEZONE_MINUTE</string>
                    <string>TO</string>
                    <string>TRAILING</string>
                    <string>TRANSACTION</string>
                    <string>TRANSLATE</string>
                    <string>TRANSLATION</string>
                    <string>TRIM</string>
                    <string>UNION</string>
                    <string>UNIQUE</string>
                    <string>UNKNOWN</string>
                    <string>UNLOCK</string>
                    <string>UPDATE</string>
                    <string>UPPER</string>
                    <string>USAGE</string>
                    <string>USER</string>
                    <string>USING</string>
                    <string>VALUE</string>
                    <string>VALUES</string>
                    <string>VARCHAR</string>
                    <string>VARYING</string>
                    <string>VIEW</string>
                    <string>WHEN</string>
                    <string>WHENEVER</string>
                    <string>WHERE</string>
                    <string>WITH</string>
                    <string>WORK</string>
                    <string>WRITE</string>
                    <string>YEAR</string>
                    <string>ZONE</string>
                </strings>
            </scope>
        </collection>
        
        <!--
            ██████╗ ███████╗███████╗██╗███╗   ██╗██╗████████╗██╗ ██████╗ ███╗   ██╗███████╗
            ██╔══██╗██╔════╝██╔════╝██║████╗  ██║██║╚══██╔══╝██║██╔═══██╗████╗  ██║██╔════╝
            ██║  ██║█████╗  █████╗  ██║██╔██╗ ██║██║   ██║   ██║██║   ██║██╔██╗ ██║███████╗
            ██║  ██║██╔══╝  ██╔══╝  ██║██║╚██╗██║██║   ██║   ██║██║   ██║██║╚██╗██║╚════██║
            ██████╔╝███████╗██║     ██║██║ ╚████║██║   ██║   ██║╚██████╔╝██║ ╚████║███████║
            ╚═════╝ ╚══════╝╚═╝     ╚═╝╚═╝  ╚═══╝╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝
        -->
        <!-- Definitions -->
        <collection name="definitions">
            <scope name="advphp-base.definition.class">
                <symbol type="class">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(class)\s+([a-zA-Z_][a-zA-Z0-9_]*)</expression>
                    <capture number="1" name="advphp-base.static.declaration" />
                    <capture number="2" name="advphp-base.static.constant" />
                </starts-with>
                <ends-with>
                    <expression>(?&lt;=\})</expression>
                </ends-with>
                <subscopes>
                    <scope name="advphp-base.definition.extends">
                        <expression>(extends)\s+([a-zA-Z_][a-zA-Z0-9_]*)</expression>
                        <capture number="1" name="advphp-base.static.processor" />
                        <capture number="2" name="advphp-base.static.constant" />
                    </scope>
                    <scope name="advphp-base.block">
                        <symbol type="block">
                            <context behavior="subtree" fold-type="class" />
                        </symbol>
                        <starts-with>
                            <expression>\{</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\}</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="comments" />
                            <include syntax="self" collection="statics" />
                            <include syntax="self" collection="definitions" />
                            <include syntax="self" collection="values" />
                            <include syntax="self" collection="identifiers" />
                            <include syntax="self" collection="blocks" />
                            <include syntax="self" collection="syntax" /> 
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
            <scope name="advphp-base.definition.interface">
                <symbol type="interface" scope="global">
                    <context behavior="start" group="class"/>
                </symbol>
                <expression>(interface)\s+([a-zA-Z_][a-zA-Z0-9_]*)</expression>
                <capture number="1" name="advphp-base.static.declaration" />
                <capture number="2" name="advphp-base.static.constant" />
            </scope>
            <scope name="advphp-base.definition.function">
                <symbol type="function">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(function)\s+([a-zA-Z_][a-zA-Z0-9_]*)</expression>
                    <capture number="1" name="advphp-base.identifier.function.keyword" />
                    <capture number="2" name="advphp-base.identifier.function.name" />
                </starts-with>
                <ends-with>
                    <expression>(?&lt;=\})</expression>
                </ends-with>
                <subscopes>
                    <scope name="advphp-base.identifier.parameter">
                        <starts-with>
                            <expression>(\()</expression>
                            <capture number="1" name="advphp-base.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\)</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </ends-with>
                        <subscopes>
                            <scope name="advphp-base.separator">
                                <expression>,</expression>
                                <capture number="0" name="advphp-base.delimiter" />
                            </scope>
                            <scope name="advphp-base.parameters">
                                <expression>(\$)((\bthis\b)|([a-zA-Z_][a-zA-Z0-9_]*))</expression>
                                <capture number="1" name="advphp-base.identifier.parameter.prefix" />
                                <capture number="3" name="advphp-base.identifier.parameter.this" />
                                <capture number="4" name="advphp-base.identifier.parameter.name" />
                            </scope>
                            <include syntax="self" collection="syntax" />  
                            <include syntax="self" collection="values" />  
                        </subscopes>
                    </scope>
                    <scope name="advphp-base.block">
                        <symbol type="block">
                            <context behavior="subtree" fold-type="function" />
                        </symbol>
                        <starts-with>
                            <expression>\{</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\}</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="comments" />
                            <include syntax="self" collection="statics" />
                            <include syntax="self" collection="definitions" />
                            <include syntax="self" collection="values" />
                            <include syntax="self" collection="identifiers" />
                            <include syntax="self" collection="blocks" />
                            <include syntax="self" collection="syntax" /> 
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>
            <scope name="advphp-base.definition.function.anonymous">
                <symbol type="block">
                    <context behavior="subtree" foldable="false" />
                </symbol>
                <starts-with>
                    <expression>(function)\s*(?=\()</expression>
                    <capture number="1" name="advphp-base.identifier.function.keyword" />
                </starts-with>
                <ends-with>
                    <expression>(?&lt;=\})</expression>
                </ends-with>
                <subscopes>
                    <scope name="advphp-base.identifier.parameter">
                        <starts-with>
                            <expression>(\()</expression>
                            <capture number="1" name="advphp-base.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\)</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </ends-with>
                        <subscopes>
                            <scope name="advphp-base.separator">
                                <expression>,</expression>
                                <capture number="0" name="advphp-base.delimiter" />
                            </scope>
                            <scope name="advphp-base.parameters">
                                <expression>(\$)((\bthis\b)|([a-zA-Z_][a-zA-Z0-9_]*))</expression>
                                <capture number="1" name="advphp-base.identifier.parameter.prefix" />
                                <capture number="3" name="advphp-base.identifier.parameter.this" />
                                <capture number="4" name="advphp-base.identifier.parameter.name" />
                            </scope>
                            <include syntax="self" collection="syntax" />  
                            <include syntax="self" collection="values" />  
                        </subscopes>
                    </scope>
                    <scope name="advphp-base.block">
                        <symbol type="block">
                            <context behavior="subtree" fold-type="function" />
                        </symbol>
                        <starts-with>
                            <expression>\{</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\}</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="comments" />
                            <include syntax="self" collection="statics" />
                            <include syntax="self" collection="definitions" />
                            <include syntax="self" collection="values" />
                            <include syntax="self" collection="identifiers" />
                            <include syntax="self" collection="blocks" />
                            <include syntax="self" collection="syntax" /> 
                        </subscopes>
                    </scope>
                </subscopes>
            </scope>        
        </collection>
        
        <!--
            ██╗   ██╗ █████╗ ██╗     ██╗   ██╗███████╗███████╗
            ██║   ██║██╔══██╗██║     ██║   ██║██╔════╝██╔════╝
            ██║   ██║███████║██║     ██║   ██║█████╗  ███████╗
            ╚██╗ ██╔╝██╔══██║██║     ██║   ██║██╔══╝  ╚════██║
             ╚████╔╝ ██║  ██║███████╗╚██████╔╝███████╗███████║
              ╚═══╝  ╚═╝  ╚═╝╚══════╝ ╚═════╝ ╚══════╝╚══════╝
        -->
        <!-- Values -->
        <collection name="values">
            <include syntax="self" collection="strings" />
            <scope name="advphp-base.value.null">
                <strings>
                    <string>null</string>
                    <string>NULL</string>
                </strings>
            </scope>
            <scope name="advphp-base.value.boolean">
                <strings>
                    <string>true</string>
                    <string>false</string>
                    <string>TRUE</string>
                    <string>FALSE</string>
                </strings>
            </scope>
            <scope name="advphp-base.value.number.bin">
                <expression>\b0b[0-1]+\b</expression>
            </scope>
            <scope name="advphp-base.value.number.hex">
                <expression>\b0x[a-fA-F0-9]+\b</expression>
            </scope>
            <scope name="advphp-base.value.number.oct">
                <expression>\b0o[0-7]+\b</expression>
            </scope>
            <scope name="advphp-base.value.number">
                <expression>\b\-?(?:\d+(?:\.\d)?|(?:\.\d+))\b</expression>
            </scope>
            <scope name="advphp-base.value.list">
                <symbol type="expression">
                    <context behavior="subtree" />
                </symbol>
                <starts-with>
                    <expression>\[</expression>
                    <capture number="0" name="advphp-base.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\]</expression>
                    <capture number="0" name="advphp-base.bracket" />
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="comments" />
                    <include syntax="self" collection="values" />
                    <include syntax="self" collection="identifiers" />
                    <include syntax="self" collection="blocks" />
                    <include syntax="self" collection="syntax" />
                </subscopes>
            </scope>
        </collection>

        <!--
            ███████╗████████╗██████╗ ██╗███╗   ██╗ ██████╗ ███████╗
            ██╔════╝╚══██╔══╝██╔══██╗██║████╗  ██║██╔════╝ ██╔════╝
            ███████╗   ██║   ██████╔╝██║██╔██╗ ██║██║  ███╗███████╗
            ╚════██║   ██║   ██╔══██╗██║██║╚██╗██║██║   ██║╚════██║
            ███████║   ██║   ██║  ██║██║██║ ╚████║╚██████╔╝███████║
            ╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚══════╝
        -->
        <!-- Strings -->
        <collection name="strings">
            <scope name="advphp-base.string.doubleQuote.sql">
                <starts-with>
                    <expression>(")(ABSOLUTE\b|ACTION\b|ADA\b|ADD\b|ALL\b|ALLOCATE\b|ALTER\b|AND\b|ANY\b|ARE\b|AS\b|ASC\b|ASSERTION\b|AT\b|AUTHORIZATION\b|AVG\b|BEGIN\b|BETWEEN\b|BIT\b|BIT_LENGTH\b|BOTH\b|BTREE\b|BY\b|CASCADE\b|CASCADED\b|CASE\b|CAST\b|CATALOG\b|CHAR\b|CHARACTER\b|CHARACTER_LENGTH\b|CHAR_LENGTH\b|CHARSET\b|CHECK\b|CLOSE\b|COALESCE\b|COLLATE\b|COLLATION\b|COLUMN\b|COMMIT\b|CONNECT\b|CONNECTION\b|CONSTRAINT\b|CONSTRAINTS\b|CONTINUE\b|CONVERT\b|CORRESPONDING\b|COUNT\b|CREATE\b|CROSS\b|CURRENT\b|CURRENT_DATE\b|CURRENT_TIME\b|CURRENT_TIMESTAMP\b|CURRENT_USER\b|CURSOR\b|DATE\b|DAY\b|DEALLOCATE\b|DEC\b|DECIMAL\b|DECLARE\b|DEFAULT\b|DEFERRABLE\b|DEFERRED\b|DELETE\b|DESC\b|DESCRIBE\b|DESCRIPTOR\b|DIAGNOSTICS\b|DISCONNECT\b|DISTINCT\b|DOMAIN\b|DOUBLE\b|DROP\b|ELSE\b|END\b|END\b|ENGINE\b|ESCAPE\b|EXCEPT\b|EXCEPTION\b|EXEC\b|EXECUTE\b|EXISTS\b|EXTERNAL\b|EXTRACT\b|FETCH\b|FIRST\b|FLOAT\b|FOR\b|FOREIGN\b|FORTRAN\b|FOUND\b|FROM\b|FULL\b|GET\b|GLOBAL\b|GO\b|GOTO\b|GRANT\b|GROUP\b|HAVING\b|HOUR\b|IDENTITY\b|IF\b|IMMEDIATE\b|IN\b|INCLUDE\b|INDEX\b|INDICATOR\b|INITIALLY\b|INNER\b|INPUT\b|INSENSITIVE\b|INSERT\b|INT\b|INTEGER\b|INTERSECT\b|INTERVAL\b|INTO\b|IS\b|ISOLATION\b|JOIN\b|KEY\b|LANGUAGE\b|LAST\b|LEADING\b|LEFT\b|LEVEL\b|LIKE\b|LOCAL\b|LOCK\b|LOWER\b|MATCH\b|MAX\b|MIN\b|MINUTE\b|MODULE\b|MONTH\b|NAMES\b|NATIONAL\b|NATURAL\b|NCHAR\b|NEXT\b|NO\b|NONE\b|NOT\b|NULLIF\b|NUMERIC\b|OCTET_LENGTH\b|OF\b|ON\b|ONLY\b|OPEN\b|OPTION\b|OR\b|ORDER\b|OUTER\b|OUTPUT\b|OVERLAPS\b|PAD\b|PARTIAL\b|PASCAL\b|POSITION\b|PRECISION\b|PREPARE\b|PRESERVE\b|PRIMARY\b|PRIOR\b|PRIVILEGES\b|PROCEDURE\b|PUBLIC\b|READ\b|REAL\b|REFERENCES\b|RELATIVE\b|RESTRICT\b|REVOKE\b|RIGHT\b|ROLLBACK\b|ROWS\b|SCHEMA\b|SCROLL\b|SECOND\b|SECTION\b|SELECT\b|SESSION\b|SESSION_USER\b|SET\b|SIZE\b|SMALLINT\b|SOME\b|SPACE\b|SQL\b|SQLCA\b|SQLCODE\b|SQLERROR\b|SQLSTATE\b|SQLWARNING\b|SUBSTRING\b|SUM\b|SYSTEM_USER\b|TABLE\b|TABLES\b|TEMPORARY\b|THEN\b|TIME\b|TIMESTAMP\b|TIMEZONE_HOUR\b|TIMEZONE_MINUTE\b|TO\b|TRAILING\b|TRANSACTION\b|TRANSLATE\b|TRANSLATION\b|TRIM\b|UNION\b|UNIQUE\b|UNKNOWN\b|UNLOCK\b|UPDATE\b|UPPER\b|USAGE\b|USER\b|USING\b|VALUE\b|VALUES\b|VARCHAR\b|VARYING\b|VIEW\b|WHEN\b|WHENEVER\b|WHERE\b|WITH\b|WORK\b|WRITE\b|YEAR\b|ZONE\b)</expression>
                    <capture number="1" name="advphp-base.bracket" />
                    <capture number="2" name="advphp-base.sql.keywords" />
                </starts-with>
                <ends-with>
                    <expression>"</expression>
                    <capture number="0" name="advphp-base.bracket" />
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="sqls" />
                    <include syntax="self" collection="strings" />
                    <include syntax="self" collection="syntax" />
                    <scope name="advphp-base.string.doubleQuote.escape">
                        <expression>\\(?:\\|&apos;|&quot;|n|r|t|b|f|\$)</expression>
                        <capture number="1" name="advphp-base.value.string" />
                    </scope>
                    <scope name="advphp-base.curlyVarSubstitution">
                        <starts-with>
                            <expression>\{\$</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\}</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="definitions" />
                            <include syntax="self" collection="values" />
                            <include syntax="self" collection="identifiers" />
                            <include syntax="self" collection="syntax" />
                            <scope name="advphp-base.varSubstitution">
                                <expression>(\bthis\b)|([a-zA-Z_][a-zA-Z0-9_]*)</expression>
                                <capture number="1" name="advphp-base.identifier.variable.this" />
                                <capture number="2" name="advphp-base.identifier.variable.name" />
                            </scope>
                            <scope name="advphp-base.varSubstitution">
                                <starts-with>
                                    <expression>\[</expression>
                                    <capture number="0" name="advphp-base.bracket" />
                                </starts-with>
                                <ends-with>
                                    <expression>\]</expression>
                                    <capture number="0" name="advphp-base.bracket" />
                                </ends-with>
                                <subscopes>
                                    <include syntax="self" collection="definitions" />
                                    <include syntax="self" collection="values" />
                                    <include syntax="self" collection="identifiers" />
                                    <include syntax="self" collection="syntax" />
                                </subscopes>
                            </scope>
                        </subscopes>
                    </scope>
                    <scope name="advphp-base.varSubstitution">
                        <expression>(\$)((\bthis\b)|([a-zA-Z_][a-zA-Z0-9_]*))</expression>
                        <capture number="1" name="advphp-base.identifier.variable.prefix" />
                        <capture number="3" name="advphp-base.identifier.variable.this" />
                        <capture number="4" name="advphp-base.identifier.variable.name" />
                    </scope>
                </subscopes>
            </scope>
            <scope name="advphp-base.string.doubleQuote">
                <starts-with>
                    <expression>"</expression>
                    <capture number="0" name="advphp-base.bracket" />
                </starts-with>
                <ends-with>
                    <expression>"</expression>
                    <capture number="0" name="advphp-base.bracket" />
                </ends-with>
                <subscopes>
                    <scope name="advphp-base.string.doubleQuote.escape">
                        <expression>\\(?:\\|&apos;|&quot;|n|r|t|b|f|\$)</expression>
                        <capture number="1" name="advphp-base.value.string" />
                    </scope>
                    <scope name="advphp-base.curlyVarSubstitution">
                        <starts-with>
                            <expression>\{\$</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\}</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="definitions" />
                            <include syntax="self" collection="values" />
                            <include syntax="self" collection="identifiers" />
                            <include syntax="self" collection="syntax" />
                            <scope name="advphp-base.varSubstitution">
                                <expression>(\bthis\b)|([a-zA-Z_][a-zA-Z0-9_]*)</expression>
                                <capture number="1" name="advphp-base.identifier.variable.this" />
                                <capture number="2" name="advphp-base.identifier.variable.name" />
                            </scope>
                            <scope name="advphp-base.varSubstitution">
                                <starts-with>
                                    <expression>\[</expression>
                                    <capture number="0" name="advphp-base.bracket" />
                                </starts-with>
                                <ends-with>
                                    <expression>\]</expression>
                                    <capture number="0" name="advphp-base.bracket" />
                                </ends-with>
                                <subscopes>
                                    <include syntax="self" collection="definitions" />
                                    <include syntax="self" collection="values" />
                                    <include syntax="self" collection="identifiers" />
                                    <include syntax="self" collection="syntax" />
                                </subscopes>
                            </scope>
                        </subscopes>
                    </scope>
                    <scope name="advphp-base.varSubstitution">
                        <expression>(\$)((\bthis\b)|([a-zA-Z_][a-zA-Z0-9_]*))</expression>
                        <capture number="1" name="advphp-base.identifier.variable.prefix" />
                        <capture number="3" name="advphp-base.identifier.variable.this" />
                        <capture number="4" name="advphp-base.identifier.variable.name" />
                    </scope>
                </subscopes>
            </scope>
            <scope name="advphp-base.string.singleQuote.sql">
                <starts-with>
                    <expression>(')(ABSOLUTE\b|ACTION\b|ADA\b|ADD\b|ALL\b|ALLOCATE\b|ALTER\b|AND\b|ANY\b|ARE\b|AS\b|ASC\b|ASSERTION\b|AT\b|AUTHORIZATION\b|AVG\b|BEGIN\b|BETWEEN\b|BIT\b|BIT_LENGTH\b|BOTH\b|BTREE\b|BY\b|CASCADE\b|CASCADED\b|CASE\b|CAST\b|CATALOG\b|CHAR\b|CHARACTER\b|CHARACTER_LENGTH\b|CHAR_LENGTH\b|CHARSET\b|CHECK\b|CLOSE\b|COALESCE\b|COLLATE\b|COLLATION\b|COLUMN\b|COMMIT\b|CONNECT\b|CONNECTION\b|CONSTRAINT\b|CONSTRAINTS\b|CONTINUE\b|CONVERT\b|CORRESPONDING\b|COUNT\b|CREATE\b|CROSS\b|CURRENT\b|CURRENT_DATE\b|CURRENT_TIME\b|CURRENT_TIMESTAMP\b|CURRENT_USER\b|CURSOR\b|DATE\b|DAY\b|DEALLOCATE\b|DEC\b|DECIMAL\b|DECLARE\b|DEFAULT\b|DEFERRABLE\b|DEFERRED\b|DELETE\b|DESC\b|DESCRIBE\b|DESCRIPTOR\b|DIAGNOSTICS\b|DISCONNECT\b|DISTINCT\b|DOMAIN\b|DOUBLE\b|DROP\b|ELSE\b|END\b|END\b|ENGINE\b|ESCAPE\b|EXCEPT\b|EXCEPTION\b|EXEC\b|EXECUTE\b|EXISTS\b|EXTERNAL\b|EXTRACT\b|FETCH\b|FIRST\b|FLOAT\b|FOR\b|FOREIGN\b|FORTRAN\b|FOUND\b|FROM\b|FULL\b|GET\b|GLOBAL\b|GO\b|GOTO\b|GRANT\b|GROUP\b|HAVING\b|HOUR\b|IDENTITY\b|IF\b|IMMEDIATE\b|IN\b|INCLUDE\b|INDEX\b|INDICATOR\b|INITIALLY\b|INNER\b|INPUT\b|INSENSITIVE\b|INSERT\b|INT\b|INTEGER\b|INTERSECT\b|INTERVAL\b|INTO\b|IS\b|ISOLATION\b|JOIN\b|KEY\b|LANGUAGE\b|LAST\b|LEADING\b|LEFT\b|LEVEL\b|LIKE\b|LOCAL\b|LOCK\b|LOWER\b|MATCH\b|MAX\b|MIN\b|MINUTE\b|MODULE\b|MONTH\b|NAMES\b|NATIONAL\b|NATURAL\b|NCHAR\b|NEXT\b|NO\b|NONE\b|NOT\b|NULLIF\b|NUMERIC\b|OCTET_LENGTH\b|OF\b|ON\b|ONLY\b|OPEN\b|OPTION\b|OR\b|ORDER\b|OUTER\b|OUTPUT\b|OVERLAPS\b|PAD\b|PARTIAL\b|PASCAL\b|POSITION\b|PRECISION\b|PREPARE\b|PRESERVE\b|PRIMARY\b|PRIOR\b|PRIVILEGES\b|PROCEDURE\b|PUBLIC\b|READ\b|REAL\b|REFERENCES\b|RELATIVE\b|RESTRICT\b|REVOKE\b|RIGHT\b|ROLLBACK\b|ROWS\b|SCHEMA\b|SCROLL\b|SECOND\b|SECTION\b|SELECT\b|SESSION\b|SESSION_USER\b|SET\b|SIZE\b|SMALLINT\b|SOME\b|SPACE\b|SQL\b|SQLCA\b|SQLCODE\b|SQLERROR\b|SQLSTATE\b|SQLWARNING\b|SUBSTRING\b|SUM\b|SYSTEM_USER\b|TABLE\b|TABLES\b|TEMPORARY\b|THEN\b|TIME\b|TIMESTAMP\b|TIMEZONE_HOUR\b|TIMEZONE_MINUTE\b|TO\b|TRAILING\b|TRANSACTION\b|TRANSLATE\b|TRANSLATION\b|TRIM\b|UNION\b|UNIQUE\b|UNKNOWN\b|UNLOCK\b|UPDATE\b|UPPER\b|USAGE\b|USER\b|USING\b|VALUE\b|VALUES\b|VARCHAR\b|VARYING\b|VIEW\b|WHEN\b|WHENEVER\b|WHERE\b|WITH\b|WORK\b|WRITE\b|YEAR\b|ZONE\b)</expression>
                    <capture number="1" name="advphp-base.bracket" />
                    <capture number="2" name="advphp-base.sql.keywords" />
                </starts-with>
                <ends-with>
                    <expression>'</expression>
                    <capture number="0" name="advphp-base.bracket" />
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="sqls" />
                    <include syntax="self" collection="strings" />
                    <include syntax="self" collection="syntax" />
                    <scope name="advphp-base.string.singleQuote.escape">
                        <expression>\\(?:\\|&apos;|&quot;|n|r|t|b|f|\$)</expression>
                        <capture number="1" name="advphp-base.value.string" />
                    </scope>
                    <scope name="advphp-base.curlyVarSubstitution">
                        <starts-with>
                            <expression>\{\$</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\}</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="definitions" />
                            <include syntax="self" collection="values" />
                            <include syntax="self" collection="identifiers" />
                            <include syntax="self" collection="syntax" />
                            <scope name="advphp-base.varSubstitution">
                                <expression>(\bthis\b)|([a-zA-Z_][a-zA-Z0-9_]*)</expression>
                                <capture number="1" name="advphp-base.identifier.variable.this" />
                                <capture number="2" name="advphp-base.identifier.variable.name" />
                            </scope>
                            <scope name="advphp-base.varSubstitution">
                                <starts-with>
                                    <expression>\[</expression>
                                    <capture number="0" name="advphp-base.bracket" />
                                </starts-with>
                                <ends-with>
                                    <expression>\]</expression>
                                    <capture number="0" name="advphp-base.bracket" />
                                </ends-with>
                                <subscopes>
                                    <include syntax="self" collection="definitions" />
                                    <include syntax="self" collection="values" />
                                    <include syntax="self" collection="identifiers" />
                                    <include syntax="self" collection="syntax" />
                                </subscopes>
                            </scope>
                        </subscopes>
                    </scope>
                    <scope name="advphp-base.varSubstitution">
                        <expression>(\$)((\bthis\b)|([a-zA-Z_][a-zA-Z0-9_]*))</expression>
                        <capture number="1" name="advphp-base.identifier.variable.prefix" />
                        <capture number="3" name="advphp-base.identifier.variable.this" />
                        <capture number="4" name="advphp-base.identifier.variable.name" />
                    </scope>
                </subscopes>
            </scope>
            <scope name="advphp-base.string.singleQuote">
                <starts-with>
                    <expression>'</expression>
                    <capture number="0" name="advphp-base.bracket" />
                </starts-with>
                <ends-with>
                    <expression>'</expression>
                    <capture number="0" name="advphp-base.bracket" />
                </ends-with>
                <subscopes>
                    <include syntax="self" collection="sqls" />
                    <scope name="advphp-base.string.singleQuote.escape">
                        <expression>\\(?:\\|&apos;|&quot;|n|r|t|b|f|\$)</expression>
                        <capture number="1" name="advphp-base.value.string" />
                    </scope>
                </subscopes>
            </scope>
            <scope name="advphp-base.string.backTic">
                <starts-with>
                    <expression>`</expression>
                    <capture number="0" name="advphp-base.bracket" />
                </starts-with>
                <ends-with>
                    <expression>`</expression>
                    <capture number="0" name="advphp-base.bracket" />
                </ends-with>
                <subscopes>
                    <scope name="advphp-base.string.backTic.escape">
                        <expression>\\(?:\\|&apos;|&quot;|n|r|t|b|f|\$)</expression>
                        <capture number="1" name="advphp-base.value.string" />
                    </scope>
                    <scope name="advphp-base.curlyVarSubstitution">
                        <starts-with>
                            <expression>\{\$</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </starts-with>
                        <ends-with>
                            <expression>\}</expression>
                            <capture number="0" name="advphp-base.bracket" />
                        </ends-with>
                        <subscopes>
                            <include syntax="self" collection="definitions" />
                            <include syntax="self" collection="values" />
                            <include syntax="self" collection="identifiers" />
                            <include syntax="self" collection="syntax" />
                            <scope name="advphp-base.varSubstitution">
                                <expression>(\bthis\b)|([a-zA-Z_][a-zA-Z0-9_]*)</expression>
                                <capture number="1" name="advphp-base.identifier.variable.this" />
                                <capture number="2" name="advphp-base.identifier.variable.name" />
                            </scope>
                            <scope name="advphp-base.varSubstitution">
                                <starts-with>
                                    <expression>\[</expression>
                                    <capture number="0" name="advphp-base.bracket" />
                                </starts-with>
                                <ends-with>
                                    <expression>\]</expression>
                                    <capture number="0" name="advphp-base.bracket" />
                                </ends-with>
                                <subscopes>
                                    <include syntax="self" collection="definitions" />
                                    <include syntax="self" collection="values" />
                                    <include syntax="self" collection="identifiers" />
                                    <include syntax="self" collection="syntax" />
                                </subscopes>
                            </scope>
                        </subscopes>
                    </scope>
                    <scope name="advphp-base.varSubstitution">
                        <expression>(\$)((\bthis\b)|([a-zA-Z_][a-zA-Z0-9_]*))</expression>
                        <capture number="1" name="advphp-base.identifier.variable.prefix" />
                        <capture number="3" name="advphp-base.identifier.variable.this" />
                        <capture number="4" name="advphp-base.identifier.variable.name" />
                    </scope>
                </subscopes>
            </scope>
        </collection>
       
        <!--
            ██╗██████╗ ███████╗███╗   ██╗████████╗██╗███████╗██╗███████╗██████╗ ███████╗
            ██║██╔══██╗██╔════╝████╗  ██║╚══██╔══╝██║██╔════╝██║██╔════╝██╔══██╗██╔════╝
            ██║██║  ██║█████╗  ██╔██╗ ██║   ██║   ██║█████╗  ██║█████╗  ██████╔╝███████╗
            ██║██║  ██║██╔══╝  ██║╚██╗██║   ██║   ██║██╔══╝  ██║██╔══╝  ██╔══██╗╚════██║
            ██║██████╔╝███████╗██║ ╚████║   ██║   ██║██║     ██║███████╗██║  ██║███████║
            ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═══╝   ╚═╝   ╚═╝╚═╝     ╚═╝╚══════╝╚═╝  ╚═╝╚══════╝
        -->
        <!-- Identifiers -->
        <collection name="identifiers">
            <scope name="advphp-base.identifier.variable">
                <symbol type="variable" scope="local" />
                <expression>(\$)((\bthis\b)|([a-zA-Z_][a-zA-Z0-9_]*))</expression>
                <capture number="1" name="advphp-base.identifier.variable.prefix" />
                <capture number="3" name="advphp-base.identifier.variable.this" />
                <capture number="4" name="advphp-base.identifier.variable.name" />
            </scope>
            <scope name="advphp-base.identifier.objectMethod">
                <expression>(\-\>)([a-zA-Z_][a-zA-Z0-9_]*)(\()</expression>
                <capture number="1" name="advphp-base.operator" />
                <capture number="2" name="advphp-base.identifier.function.name" />
                <capture number="3" name="advphp-base.bracket" />
            </scope>
            <scope name="advphp-base.identifier.objectProperty">
                <expression>(\-\>)([a-zA-Z_][a-zA-Z0-9_]*)</expression>
                <capture number="1" name="advphp-base.operator" />
                <capture number="2" name="advphp-base.identifier.variable.name" />
            </scope>
            <scope name="advphp-base.identifier.function">
                <expression>([a-zA-Z_{1}][a-zA-Z_][a-zA-Z0-9_]*)(\()</expression>
                <capture number="1" name="advphp-base.identifier.function.name" />
                <capture number="2" name="advphp-base.bracket" />
            </scope>
            <scope name="advphp-base.identifier.object">
                <expression>([a-zA-Z_{1}][a-zA-Z_][a-zA-Z0-9_]*)(\:\:)</expression>
                <capture number="1" name="advphp-base.identifier.object.name" />
                <capture number="2" name="advphp-base.operator" />
            </scope>
        </collection>

        <!--
            ██████╗ ██╗      ██████╗  ██████╗██╗  ██╗███████╗
            ██╔══██╗██║     ██╔═══██╗██╔════╝██║ ██╔╝██╔════╝
            ██████╔╝██║     ██║   ██║██║     █████╔╝ ███████╗
            ██╔══██╗██║     ██║   ██║██║     ██╔═██╗ ╚════██║
            ██████╔╝███████╗╚██████╔╝╚██████╗██║  ██╗███████║
            ╚═════╝ ╚══════╝ ╚═════╝  ╚═════╝╚═╝  ╚═╝╚══════╝
        -->
        <!-- Blocks -->
        <collection name="blocks">
            <scope name="advphp-base.block">
                <symbol type="block">
                    <context behavior="subtree" />
                </symbol>
                <starts-with>
                    <expression>\{</expression>
                    <capture number="0" name="advphp-base.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\}</expression>
                    <capture number="0" name="advphp-base.bracket" />
                </ends-with>
                <subscopes>
                    <cut-off>
                        <expression>(?=\?&gt;)</expression>
                    </cut-off>
                    <include syntax="self" collection="comments" />
                    <include syntax="self" collection="statics" />
                    <include syntax="self" collection="definitions" />
                    <include syntax="self" collection="values" />
                    <include syntax="self" collection="identifiers" />
                    <include syntax="self" collection="blocks" />
                    <include syntax="self" collection="syntax" />   
                </subscopes>
            </scope>
            <scope name="advphp-base.square.block">
                <symbol type="block">
                    <context behavior="subtree" />
                </symbol>
                <starts-with>
                    <expression>\[</expression>
                    <capture number="0" name="advphp-base.bracket" />
                </starts-with>
                <ends-with>
                    <expression>\]</expression>
                    <capture number="0" name="advphp-base.bracket" />
                </ends-with>
                <subscopes>
                    <cut-off>
                        <expression>(?=\?&gt;)</expression>
                    </cut-off>
                    <include syntax="self" collection="comments" />
                    <include syntax="self" collection="statics" />
                    <include syntax="self" collection="definitions" />
                    <include syntax="self" collection="values" />
                    <include syntax="self" collection="identifiers" />
                    <include syntax="self" collection="blocks" />
                    <include syntax="self" collection="syntax" />   
                </subscopes>
            </scope>
        </collection>

        <!--
            ███████╗██╗   ██╗███╗   ██╗████████╗ █████╗ ██╗  ██╗
            ██╔════╝╚██╗ ██╔╝████╗  ██║╚══██╔══╝██╔══██╗╚██╗██╔╝
            ███████╗ ╚████╔╝ ██╔██╗ ██║   ██║   ███████║ ╚███╔╝
            ╚════██║  ╚██╔╝  ██║╚██╗██║   ██║   ██╔══██║ ██╔██╗
            ███████║   ██║   ██║ ╚████║   ██║   ██║  ██║██╔╝ ██╗
            ╚══════╝   ╚═╝   ╚═╝  ╚═══╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝
        -->
        <!-- Syntax -->
        <collection name="syntax">
            <scope name="advphp-base.bracket">
                <expression>[\(\[\{\)\]\}]</expression>
            </scope>
            <scope name="advphp-base.operator">
                <expression>(\+|\-|\*|\/|\%|\*\*|\=|\=\=|\=\=\=|\!\=|\&lt;\&gt;|\!\=\=|\&amp;|\^|\||\&lt;\&lt;|\&gt;\&gt;|\&lt;|\&lt;\=|\&gt;|\&gt;\=|\&lt;\=\&gt;|\+\+|\-\-|\&amp;\&amp;|\|\||\;|\!|\.|\.\=|\?|\:|\?\?)</expression>
            </scope>
            <scope name="advphp-base.delimiter">
                <expression>,</expression>
            </scope>
        </collection>
    </collections>
</syntax>

